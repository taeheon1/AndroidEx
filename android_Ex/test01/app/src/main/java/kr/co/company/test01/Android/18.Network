

네트워크
    -> 통신

DataBase <-------> Server <------> Client(app,web,....)
   글                                A
   댓글                              B

Local DataBase 의 한계
- 동기화가 어렵다.
- 상호작용이 불가능 하다.

서버와 통신하는 방법
 - 해당 URL로 요청한다.
 - 인증정보
 - JSON 형식을 사용해서 data를 보낸다.
 - JavaScript Object Notation - > JavaScript에서 객체를 만들 때 사용하는 표현식 이다.

JSON형식

- [] -> List
- {} -> 객체
     -> " " -> 문자열
     -> " " 없으면 - > 숫자
[
    {
        "id" : 1 ,
        "name" : "홍길동",                => 객체
        "age" : 20,
        "intro" : "나는 홍길동 이다!"
     },
     {
             "id" : 2 ,
             "name" : "김아무개",
             "age" : 10,
             "intro" : "나는 김아무개 이다!"
          }
]

Json Parsing
-> Json을 코틀린이나 자바가 이해할 수 있게 변형하는 과정

Serializable ( 직렬화 )
------------------------------->
    id, name, age, intro
-> Java System 내부에서 사용되는 object를 외부에서 사용 할 수 있도록 byte 형태로 데이터를 바꾸는것

코틀린이나/ 자바가 이해 할 수 있는 틀
class Person(
    var id : Int ? =null
    var name : String ? =null
    var age : Int ? =null
    var intro : String ? =null
)
=> Person( 1,"김아무개", 20, "안녕하세요" )

Request Type                - Status Code -
- GET -> 정보요청               -> 200 OK
- POST -> 정보 추가 요청        -> 201 Create
- DELETE -> 정보 삭제 요청
- PUT -> 정보 수정 요청

Library
-Volly
-Retrofit